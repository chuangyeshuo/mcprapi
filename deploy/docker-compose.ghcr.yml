version: '3.8'

# 使用GitHub Container Registry镜像的生产环境配置
# 使用方法：docker-compose -f docker-compose.ghcr.yml up -d

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: mcprapi-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-api_auth}
      MYSQL_USER: ${MYSQL_USER:-mcprapi}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mcprapi}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
      - ../backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - mcprapi-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=1000
      --innodb_buffer_pool_size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-password}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: mcprapi-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-password}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis-data:/data
      - ../backend/configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - mcprapi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    user: "999:999"

  # 后端API服务 - 使用GitHub Container Registry镜像
  backend:
    image: ghcr.io/chuangyeshuo/mcprapi-backend:${BACKEND_VERSION:-latest}
    container_name: mcprapi-backend
    restart: unless-stopped
    environment:
      # 数据库配置
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE:-api_auth}
      MYSQL_USER: ${MYSQL_USER:-mcprapi}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mcprapi}
      
      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}
      
      # 应用配置
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      APP_ENV: ${APP_ENV:-production}
      APP_PORT: 8080
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # 安全配置
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:8082,http://localhost:3000}
      RATE_LIMIT: ${RATE_LIMIT:-100}
    ports:
      - "${BACKEND_PORT:-8081}:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mcprapi-network
    volumes:
      - ../backend/logs:/app/logs
      - ../backend/configs:/app/configs:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # 前端Web服务 - 使用GitHub Container Registry镜像
  frontend:
    image: ghcr.io/chuangyeshuo/mcprapi-frontend:${FRONTEND_VERSION:-latest}
    container_name: mcprapi-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8082}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mcprapi-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=50m
      - /var/run:noexec,nosuid,size=10m
      - /tmp:noexec,nosuid,size=50m

networks:
  mcprapi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local